; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\exit.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\exit.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\CMSIS_and_startup -I..\CMSIS_and_startup\CMSIS -I.\bsp -I..\Hal_lib\inc -I.\bsp\LCD -I.\bsp\LED -I.\bsp\SPI -I.\bsp\sys -I.\bsp\UART -I.\bsp\Timer -I.\bsp\exit -I.\bsp\touchpad -I.\RTE\_TK499_LTDC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.5.1\Device\ARM\ARMCM4\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=527 -DARMCM4_FP --omf_browse=.\obj\exit.crf bsp\exit\exit.c]
                          THUMB

                          AREA ||i.EXITLCD_Init||, CODE, READONLY, ALIGN=2

                  EXITLCD_Init PROC
;;;14     
;;;15     void EXITLCD_Init(void)
000000  b510              PUSH     {r4,lr}
;;;16     {
;;;17     		char i,j,a;	
;;;18     	EXTI_X=80;                   //模拟320240左上角XY坐标
000002  2350              MOVS     r3,#0x50
000004  4c13              LDR      r4,|L1.84|
000006  8023              STRH     r3,[r4,#0]
;;;19     	EXTI_Y=150;
000008  2396              MOVS     r3,#0x96
00000a  4c13              LDR      r4,|L1.88|
00000c  8023              STRH     r3,[r4,#0]
;;;20     	  ie=je=0;
00000e  2300              MOVS     r3,#0
000010  4c12              LDR      r4,|L1.92|
000012  8023              STRH     r3,[r4,#0]
000014  4c12              LDR      r4,|L1.96|
000016  8023              STRH     r3,[r4,#0]
;;;21     	  i=j=0;
000018  4619              MOV      r1,r3
00001a  4618              MOV      r0,r3
;;;22     	a=0x30;
00001c  2230              MOVS     r2,#0x30
;;;23       be=0x3A;
00001e  233a              MOVS     r3,#0x3a
000020  4c10              LDR      r4,|L1.100|
000022  7023              STRB     r3,[r4,#0]
;;;24       //pe=&a;
;;;25     	for(i=0;i<YLCD;i++) 
000024  2000              MOVS     r0,#0
000026  e012              B        |L1.78|
                  |L1.40|
;;;26     			{
;;;27     				for(j=0;j<XLCD;j++)
000028  2100              MOVS     r1,#0
00002a  e00c              B        |L1.70|
                  |L1.44|
;;;28     				{ 
;;;29     					 EXTI_BUFF[i][j]=a;
00002c  eb000380          ADD      r3,r0,r0,LSL #2
000030  4c0d              LDR      r4,|L1.104|
000032  eb0403c3          ADD      r3,r4,r3,LSL #3
000036  545a              STRB     r2,[r3,r1]
;;;30     				 a++;	
000038  1c53              ADDS     r3,r2,#1
00003a  b2da              UXTB     r2,r3
;;;31     					if(a==0x7E)	
00003c  2a7e              CMP      r2,#0x7e
00003e  d100              BNE      |L1.66|
;;;32     					 a=0x30;			
000040  2230              MOVS     r2,#0x30
                  |L1.66|
000042  1c4b              ADDS     r3,r1,#1              ;27
000044  b2d9              UXTB     r1,r3                 ;27
                  |L1.70|
000046  2928              CMP      r1,#0x28              ;27
000048  dbf0              BLT      |L1.44|
00004a  1c43              ADDS     r3,r0,#1              ;25
00004c  b2d8              UXTB     r0,r3                 ;25
                  |L1.78|
00004e  280f              CMP      r0,#0xf               ;25
000050  dbea              BLT      |L1.40|
;;;33     				
;;;34     				}
;;;35     		//a++;
;;;36     	    }
;;;37     }
000052  bd10              POP      {r4,pc}
;;;38     
                          ENDP

                  |L1.84|
                          DCD      EXTI_X
                  |L1.88|
                          DCD      EXTI_Y
                  |L1.92|
                          DCD      ||je||
                  |L1.96|
                          DCD      ||ie||
                  |L1.100|
                          DCD      ||be||
                  |L1.104|
                          DCD      EXTI_BUFF

                          AREA ||i.EXITLCD_Show||, CODE, READONLY, ALIGN=2

                  EXITLCD_Show PROC
;;;57     
;;;58     void EXITLCD_Show(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;59     {
000004  b08e              SUB      sp,sp,#0x38
;;;60     			//LCD_PutString(80,150,EXTI_BUFF,Red,Yellow,1);   //前台显示EXTI_BUFF内容//二维数组转一维数组
;;;61     		char  BUFF[XLCD+1]={0x39,0};
000006  2125              MOVS     r1,#0x25
000008  a804              ADD      r0,sp,#0x10
00000a  f7fffffe          BL       __aeabi_memclr4
00000e  4821              LDR      r0,|L2.148|
000010  6800              LDR      r0,[r0,#0]  ; <Data1>
000012  9003              STR      r0,[sp,#0xc]
;;;62     
;;;63     		int im,jm,jj=0;
000014  2500              MOVS     r5,#0
;;;64     		char aa;
;;;65     		char *pp;
;;;66     					   pp= &EXTI_BUFF[0][0];
000016  f8df8080          LDR      r8,|L2.152|
;;;67       
;;;68     
;;;69     								LCD_PutString(80,120,BUFF,Red,Yellow,1);
00001a  2001              MOVS     r0,#1
00001c  f64f71ff          MOV      r1,#0xffff
000020  23ff              MOVS     r3,#0xff
000022  aa03              ADD      r2,sp,#0xc
000024  e9cd1000          STRD     r1,r0,[sp,#0]
000028  2178              MOVS     r1,#0x78
00002a  2050              MOVS     r0,#0x50
00002c  f7fffffe          BL       LCD_PutString
;;;70         for (im=0; im<YLCD; im++)  //15-1
000030  2600              MOVS     r6,#0
000032  e029              B        |L2.136|
                  |L2.52|
;;;71         {		
;;;72     
;;;73             for (jm=0; jm<XLCD; jm++)  //40
000034  2400              MOVS     r4,#0
000036  e009              B        |L2.76|
                  |L2.56|
;;;74             {
;;;75     					
;;;76     					  aa=pp[jj];
000038  f8187005          LDRB     r7,[r8,r5]
;;;77     					  BUFF[jm]=aa;
00003c  a803              ADD      r0,sp,#0xc
00003e  5507              STRB     r7,[r0,r4]
;;;78     					  jj++;
000040  1c6d              ADDS     r5,r5,#1
;;;79     		  		  if(jj==(XLCD*YLCD))
000042  f5b57f16          CMP      r5,#0x258
000046  d100              BNE      |L2.74|
;;;80     		   				jj=0;
000048  2500              MOVS     r5,#0
                  |L2.74|
00004a  1c64              ADDS     r4,r4,#1              ;73
                  |L2.76|
00004c  2c28              CMP      r4,#0x28              ;73
00004e  dbf3              BLT      |L2.56|
;;;81     					
;;;82     					
;;;83             }
;;;84     						LCD_PutString(EXTI_X,EXTI_Y,BUFF,Red,Yellow,1);  //80+320,150+240-16 
000050  2001              MOVS     r0,#1
000052  f64f71ff          MOV      r1,#0xffff
000056  23ff              MOVS     r3,#0xff
000058  aa03              ADD      r2,sp,#0xc
00005a  e9cd1000          STRD     r1,r0,[sp,#0]
00005e  480f              LDR      r0,|L2.156|
000060  8801              LDRH     r1,[r0,#0]  ; EXTI_Y
000062  480f              LDR      r0,|L2.160|
000064  8800              LDRH     r0,[r0,#0]  ; EXTI_X
000066  f7fffffe          BL       LCD_PutString
;;;85     				    if(EXTI_Y<(((YLCD*16)+150)-16))//    if(EXTI_Y<374)
00006a  480c              LDR      r0,|L2.156|
00006c  8800              LDRH     r0,[r0,#0]  ; EXTI_Y
00006e  f5b07fbb          CMP      r0,#0x176
000072  da05              BGE      |L2.128|
;;;86     						{ EXTI_Y=EXTI_Y+16; }
000074  4809              LDR      r0,|L2.156|
000076  8800              LDRH     r0,[r0,#0]  ; EXTI_Y
000078  3010              ADDS     r0,r0,#0x10
00007a  4908              LDR      r1,|L2.156|
00007c  8008              STRH     r0,[r1,#0]
00007e  e002              B        |L2.134|
                  |L2.128|
;;;87     						else 
;;;88     						{	EXTI_Y=150;  }
000080  2096              MOVS     r0,#0x96
000082  4906              LDR      r1,|L2.156|
000084  8008              STRH     r0,[r1,#0]
                  |L2.134|
000086  1c76              ADDS     r6,r6,#1              ;70
                  |L2.136|
000088  2e0f              CMP      r6,#0xf               ;70
00008a  dbd3              BLT      |L2.52|
;;;89     		}	
;;;90     
;;;91       
;;;92     }
00008c  b00e              ADD      sp,sp,#0x38
00008e  e8bd81f0          POP      {r4-r8,pc}
;;;93     	
                          ENDP

000092  0000              DCW      0x0000
                  |L2.148|
                          DCD      ||.constdata||
                  |L2.152|
                          DCD      EXTI_BUFF
                  |L2.156|
                          DCD      EXTI_Y
                  |L2.160|
                          DCD      EXTI_X

                          AREA ||i.EXIT_KEY_Init||, CODE, READONLY, ALIGN=1

                  EXIT_KEY_Init PROC
;;;38     
;;;39     void EXIT_KEY_Init(void)
000000  b508              PUSH     {r3,lr}
;;;40     {
;;;41     
;;;42     	NVIC_InitTypeDef   NVIC_InitStructure;														//调用NVIC定义的结构体
;;;43     
;;;44        /* Configure PA0 pin as input floating */
;;;45     	//KEY_Init();
;;;46     	
;;;47       Ex_NVIC_Config(0,0,1); //参数一：I/O口  参数二：BITx:中断线  参数三 ：TRIM:触发模式,1,下升沿;2,上降沿;3，任意电平触发/0,20,3
000002  2201              MOVS     r2,#1
000004  2100              MOVS     r1,#0
000006  4608              MOV      r0,r1
000008  f7fffffe          BL       Ex_NVIC_Config
;;;48     
;;;49       NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;
00000c  2006              MOVS     r0,#6
00000e  f88d0000          STRB     r0,[sp,#0]
;;;50       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000012  2001              MOVS     r0,#1
000014  f88d0003          STRB     r0,[sp,#3]
;;;51       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
000018  f88d0001          STRB     r0,[sp,#1]
;;;52       NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
00001c  f88d0002          STRB     r0,[sp,#2]
;;;53       NVIC_Init( & NVIC_InitStructure);
000020  4668              MOV      r0,sp
000022  f7fffffe          BL       NVIC_Init
;;;54     
;;;55     
;;;56     }
000026  bd08              POP      {r3,pc}
;;;57     
                          ENDP


                          AREA ||i.EXTI0_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI0_IRQHandler PROC
;;;96     //uint32_t it;
;;;97     void EXTI0_IRQHandler(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;98     {    
;;;99     //char b=0x41;
;;;100         //*p++;
;;;101    					//for(it=0;it<1000;it++);  //延时
;;;102    	  LCD_PutString(200,80,"EXIT-in",Red,Yellow,1);
000002  2001              MOVS     r0,#1
000004  f64f71ff          MOV      r1,#0xffff
000008  23ff              MOVS     r3,#0xff
00000a  a224              ADR      r2,|L4.156|
00000c  e9cd1000          STRD     r1,r0,[sp,#0]
000010  2150              MOVS     r1,#0x50
000012  20c8              MOVS     r0,#0xc8
000014  f7fffffe          BL       LCD_PutString
;;;103    
;;;104    
;;;105    
;;;106          
;;;107    	  if(EXTI_GetITStatus(EXTI_Line0)!=RESET)  //进入中断后，不等于0      
000018  2001              MOVS     r0,#1
00001a  f7fffffe          BL       EXTI_GetITStatus
00001e  b158              CBZ      r0,|L4.56|
;;;108    					   EXTI_BUFF[je][ie]=be; 
000020  4820              LDR      r0,|L4.164|
000022  7800              LDRB     r0,[r0,#0]  ; be
000024  4920              LDR      r1,|L4.168|
000026  8809              LDRH     r1,[r1,#0]  ; je
000028  eb010181          ADD      r1,r1,r1,LSL #2
00002c  4a1f              LDR      r2,|L4.172|
00002e  eb0201c1          ADD      r1,r2,r1,LSL #3
000032  4a1f              LDR      r2,|L4.176|
000034  8812              LDRH     r2,[r2,#0]  ; ie
000036  5488              STRB     r0,[r1,r2]
                  |L4.56|
;;;109    										ie++;
000038  481d              LDR      r0,|L4.176|
00003a  8800              LDRH     r0,[r0,#0]  ; ie
00003c  1c40              ADDS     r0,r0,#1
00003e  491c              LDR      r1,|L4.176|
000040  8008              STRH     r0,[r1,#0]
;;;110    	
;;;111    					 	if(ie==XLCD)
000042  4608              MOV      r0,r1
000044  8800              LDRH     r0,[r0,#0]  ; ie
000046  2828              CMP      r0,#0x28
000048  d106              BNE      |L4.88|
;;;112    						{ ie=0; je++;		}
00004a  2000              MOVS     r0,#0
00004c  8008              STRH     r0,[r1,#0]
00004e  4816              LDR      r0,|L4.168|
000050  8800              LDRH     r0,[r0,#0]  ; je
000052  1c40              ADDS     r0,r0,#1
000054  4914              LDR      r1,|L4.168|
000056  8008              STRH     r0,[r1,#0]
                  |L4.88|
;;;113    					      	if(je==YLCD)
000058  4813              LDR      r0,|L4.168|
00005a  8800              LDRH     r0,[r0,#0]  ; je
00005c  280f              CMP      r0,#0xf
00005e  d102              BNE      |L4.102|
;;;114    								    je=0;				 								 			
000060  2000              MOVS     r0,#0
000062  4911              LDR      r1,|L4.168|
000064  8008              STRH     r0,[r1,#0]
                  |L4.102|
;;;115            be++;
000066  480f              LDR      r0,|L4.164|
000068  7800              LDRB     r0,[r0,#0]  ; be
00006a  1c40              ADDS     r0,r0,#1
00006c  490d              LDR      r1,|L4.164|
00006e  7008              STRB     r0,[r1,#0]
;;;116    				if(be==0x5B)
000070  4608              MOV      r0,r1
000072  7800              LDRB     r0,[r0,#0]  ; be
000074  285b              CMP      r0,#0x5b
000076  d101              BNE      |L4.124|
;;;117    					 be=0x3A;
000078  203a              MOVS     r0,#0x3a
00007a  7008              STRB     r0,[r1,#0]
                  |L4.124|
;;;118    				LCD_PutString(200,80,"EXIT---out",Yellow,Blue,1);
00007c  2001              MOVS     r0,#1
00007e  f44f017f          MOV      r1,#0xff0000
000082  f64f73ff          MOV      r3,#0xffff
000086  a20b              ADR      r2,|L4.180|
000088  e9cd1000          STRD     r1,r0,[sp,#0]
00008c  2150              MOVS     r1,#0x50
00008e  20c8              MOVS     r0,#0xc8
000090  f7fffffe          BL       LCD_PutString
;;;119    
;;;120    	    EXTI_ClearITPendingBit(EXTI_Line0); //清除LINE0上的中断标志位 
000094  2001              MOVS     r0,#1
000096  f7fffffe          BL       EXTI_ClearITPendingBit
;;;121    }
00009a  bd1c              POP      {r2-r4,pc}
;;;122    
                          ENDP

                  |L4.156|
00009c  45584954          DCB      "EXIT-in",0
0000a0  2d696e00
                  |L4.164|
                          DCD      ||be||
                  |L4.168|
                          DCD      ||je||
                  |L4.172|
                          DCD      EXTI_BUFF
                  |L4.176|
                          DCD      ||ie||
                  |L4.180|
0000b4  45584954          DCB      "EXIT---out",0
0000b8  2d2d2d6f
0000bc  757400  
0000bf  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  EXTI_BUFF
                          %        600

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  39000000          DCB      0x39,0x00,0x00,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  EXTI_X
000000  0000              DCB      0x00,0x00
                  EXTI_Y
000002  0000              DCB      0x00,0x00
                  ||ie||
000004  0000              DCB      0x00,0x00
                  ||je||
000006  0000              DCB      0x00,0x00
                  ||ae||
000008  00                DCB      0x00
                  ||be||
000009  000000            DCB      0x00,0x00,0x00
                  ||pe||
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "bsp\\exit\\exit.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_exit_c_3e203a8e____REV16|
#line 388 "..\\CMSIS_and_startup\\CMSIS\\cmsis_armcc.h"
|__asm___6_exit_c_3e203a8e____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_exit_c_3e203a8e____REVSH|
#line 402
|__asm___6_exit_c_3e203a8e____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_exit_c_3e203a8e____RRX|
#line 587
|__asm___6_exit_c_3e203a8e____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
