; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\hal_exti.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\hal_exti.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\CMSIS_and_startup -I..\CMSIS_and_startup\CMSIS -I.\bsp -I..\Hal_lib\inc -I.\bsp\LCD -I.\bsp\LED -I.\bsp\SPI -I.\bsp\sys -I.\bsp\UART -I.\bsp\Timer -I.\bsp\exit -I.\bsp\touchpad -I.\RTE\_TK499_LTDC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.5.1\Device\ARM\ARMCM4\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=527 -DARMCM4_FP --omf_browse=.\obj\hal_exti.crf ..\Hal_lib\src\HAL_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;210    */
;;;211    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;212    {
;;;213      /* Check the parameters */
;;;214      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;215      
;;;216      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;217    }
000004  4770              BX       lr
;;;218    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;251    */
;;;252    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;253    {
;;;254      /* Check the parameters */
;;;255      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;256      
;;;257      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;258    }
000004  4770              BX       lr
;;;259    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;84     */
;;;85     void EXTI_DeInit(void)
000000  2000              MOVS     r0,#0
;;;86     {
;;;87       EXTI->IMR = 0x00000000;
000002  4906              LDR      r1,|L3.28|
000004  6008              STR      r0,[r1,#0]
;;;88       EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;89       EXTI->RTSR = 0x00000000; 
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;90       EXTI->FTSR = 0x00000000; 
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;91       EXTI->PR = 0x001FFFFF;
000012  4803              LDR      r0,|L3.32|
000014  4901              LDR      r1,|L3.28|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;92     }
00001a  4770              BX       lr
;;;93     
                          ENDP

                  |L3.28|
                          DCD      0x40013c00
                  |L3.32|
                          DCD      0x001fffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;171    */
;;;172    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;173    {
;;;174      /* Check the parameters */
;;;175      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;176      
;;;177      EXTI->SWIER |= EXTI_Line;
000002  6809              LDR      r1,[r1,#0]
000004  4301              ORRS     r1,r1,r0
000006  4a01              LDR      r2,|L4.12|
000008  6011              STR      r1,[r2,#0]
;;;178    }
00000a  4770              BX       lr
;;;179    
                          ENDP

                  |L4.12|
                          DCD      0x40013c10

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;186    */
;;;187    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;188    {
;;;189      FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;190      /* Check the parameters */
;;;191      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;192      
;;;193      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000004  4a03              LDR      r2,|L5.20|
000006  6812              LDR      r2,[r2,#0]
000008  400a              ANDS     r2,r2,r1
00000a  b10a              CBZ      r2,|L5.16|
;;;194      {
;;;195        bitstatus = SET;
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L5.18|
                  |L5.16|
;;;196      }
;;;197      else
;;;198      {
;;;199        bitstatus = RESET;
000010  2000              MOVS     r0,#0
                  |L5.18|
;;;200      }
;;;201      return bitstatus;
;;;202    }
000012  4770              BX       lr
;;;203    
                          ENDP

                  |L5.20|
                          DCD      0x40013c14

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;225    */
;;;226    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;227    {
;;;228      ITStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;229      uint32_t enablestatus = 0;
000004  2200              MOVS     r2,#0
;;;230      /* Check the parameters */
;;;231      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;232      
;;;233      enablestatus =  EXTI->IMR & EXTI_Line;
000006  4b07              LDR      r3,|L6.36|
000008  681b              LDR      r3,[r3,#0]
00000a  ea030201          AND      r2,r3,r1
;;;234      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
00000e  4b05              LDR      r3,|L6.36|
000010  3314              ADDS     r3,r3,#0x14
000012  681b              LDR      r3,[r3,#0]
000014  400b              ANDS     r3,r3,r1
000016  b113              CBZ      r3,|L6.30|
000018  b10a              CBZ      r2,|L6.30|
;;;235      {
;;;236        bitstatus = SET;
00001a  2001              MOVS     r0,#1
00001c  e000              B        |L6.32|
                  |L6.30|
;;;237      }
;;;238      else
;;;239      {
;;;240        bitstatus = RESET;
00001e  2000              MOVS     r0,#0
                  |L6.32|
;;;241      }
;;;242      return bitstatus;
;;;243    }
000020  4770              BX       lr
;;;244    
                          ENDP

000022  0000              DCW      0x0000
                  |L6.36|
                          DCD      0x40013c00

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;101    */
;;;102    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;103    {
;;;104      uint32_t tmp = 0;
;;;105      /* Check the parameters */
;;;106      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;107      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;108      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;109      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;110      
;;;111      tmp = (uint32_t)EXTI_BASE;  
000002  4923              LDR      r1,|L7.144|
;;;112      
;;;113      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7982              LDRB     r2,[r0,#6]
000006  2a00              CMP      r2,#0
000008  d03a              BEQ      |L7.128|
;;;114      {
;;;115        /* Clear EXTI line configuration */
;;;116        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00000a  460a              MOV      r2,r1
00000c  6812              LDR      r2,[r2,#0]
00000e  6803              LDR      r3,[r0,#0]
000010  439a              BICS     r2,r2,r3
000012  460b              MOV      r3,r1
000014  601a              STR      r2,[r3,#0]
;;;117        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000016  1d0a              ADDS     r2,r1,#4
000018  6812              LDR      r2,[r2,#0]
00001a  6803              LDR      r3,[r0,#0]
00001c  439a              BICS     r2,r2,r3
00001e  1d0b              ADDS     r3,r1,#4
000020  601a              STR      r2,[r3,#0]
;;;118        
;;;119        tmp += EXTI_InitStruct->EXTI_Mode;
000022  7902              LDRB     r2,[r0,#4]
000024  4411              ADD      r1,r1,r2
;;;120        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000026  680a              LDR      r2,[r1,#0]
000028  6803              LDR      r3,[r0,#0]
00002a  431a              ORRS     r2,r2,r3
00002c  600a              STR      r2,[r1,#0]
;;;121        
;;;122        /* Clear Rising Falling edge configuration */
;;;123        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
00002e  4a18              LDR      r2,|L7.144|
000030  3208              ADDS     r2,r2,#8
000032  6812              LDR      r2,[r2,#0]
000034  6803              LDR      r3,[r0,#0]
000036  439a              BICS     r2,r2,r3
000038  4b15              LDR      r3,|L7.144|
00003a  3308              ADDS     r3,r3,#8
00003c  601a              STR      r2,[r3,#0]
;;;124        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
00003e  1d1a              ADDS     r2,r3,#4
000040  6812              LDR      r2,[r2,#0]
000042  6803              LDR      r3,[r0,#0]
000044  439a              BICS     r2,r2,r3
000046  4b12              LDR      r3,|L7.144|
000048  330c              ADDS     r3,r3,#0xc
00004a  601a              STR      r2,[r3,#0]
;;;125        
;;;126        /* Select the trigger for the selected external interrupts */
;;;127        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
00004c  7942              LDRB     r2,[r0,#5]
00004e  2a10              CMP      r2,#0x10
000050  d10e              BNE      |L7.112|
;;;128        {
;;;129          /* Rising Falling edge */
;;;130          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
000052  1f1a              SUBS     r2,r3,#4
000054  6812              LDR      r2,[r2,#0]
000056  6803              LDR      r3,[r0,#0]
000058  431a              ORRS     r2,r2,r3
00005a  4b0d              LDR      r3,|L7.144|
00005c  3308              ADDS     r3,r3,#8
00005e  601a              STR      r2,[r3,#0]
;;;131          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
000060  1d1a              ADDS     r2,r3,#4
000062  6812              LDR      r2,[r2,#0]
000064  6803              LDR      r3,[r0,#0]
000066  431a              ORRS     r2,r2,r3
000068  4b09              LDR      r3,|L7.144|
00006a  330c              ADDS     r3,r3,#0xc
00006c  601a              STR      r2,[r3,#0]
00006e  e00e              B        |L7.142|
                  |L7.112|
;;;132        }
;;;133        else
;;;134        {
;;;135          tmp = (uint32_t)EXTI_BASE;
000070  4907              LDR      r1,|L7.144|
;;;136          tmp += EXTI_InitStruct->EXTI_Trigger;
000072  7942              LDRB     r2,[r0,#5]
000074  4411              ADD      r1,r1,r2
;;;137          
;;;138          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000076  680a              LDR      r2,[r1,#0]
000078  6803              LDR      r3,[r0,#0]
00007a  431a              ORRS     r2,r2,r3
00007c  600a              STR      r2,[r1,#0]
00007e  e006              B        |L7.142|
                  |L7.128|
;;;139        }
;;;140      }
;;;141      else
;;;142      {
;;;143        tmp = (uint32_t)EXTI_BASE;
000080  4903              LDR      r1,|L7.144|
;;;144        tmp += EXTI_InitStruct->EXTI_Mode;
000082  7902              LDRB     r2,[r0,#4]
000084  4411              ADD      r1,r1,r2
;;;145        /* Disable the selected external lines */
;;;146        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
000086  680a              LDR      r2,[r1,#0]
000088  6803              LDR      r3,[r0,#0]
00008a  439a              BICS     r2,r2,r3
00008c  600a              STR      r2,[r1,#0]
                  |L7.142|
;;;147      }
;;;148    }
00008e  4770              BX       lr
;;;149    
                          ENDP

                  |L7.144|
                          DCD      0x40013c00

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;155    */
;;;156    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;157    {
;;;158      EXTI_InitStruct->EXTI_Line = EXTI_LineNone;
000002  6001              STR      r1,[r0,#0]
;;;159      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000004  7101              STRB     r1,[r0,#4]
;;;160      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  210c              MOVS     r1,#0xc
000008  7141              STRB     r1,[r0,#5]
;;;161      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  2100              MOVS     r1,#0
00000c  7181              STRB     r1,[r0,#6]
;;;162    }
00000e  4770              BX       lr
;;;163    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\Hal_lib\\src\\HAL_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_HAL_exti_c_28b3b60e____REV16|
#line 388 "..\\CMSIS_and_startup\\CMSIS\\cmsis_armcc.h"
|__asm___10_HAL_exti_c_28b3b60e____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_HAL_exti_c_28b3b60e____REVSH|
#line 402
|__asm___10_HAL_exti_c_28b3b60e____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_HAL_exti_c_28b3b60e____RRX|
#line 587
|__asm___10_HAL_exti_c_28b3b60e____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
